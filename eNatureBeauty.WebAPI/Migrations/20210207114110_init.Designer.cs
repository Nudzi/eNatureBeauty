// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eNatureBeauty.WebAPI.Database;

namespace eNatureBeauty.WebAPI.Migrations
{
    [DbContext(typeof(natureBeautyContext))]
    [Migration("20210207114110_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.IngredientTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("IngredientTypes");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Ingredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UnitId")
                        .HasColumnName("UnitID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.IngredientsIngredientTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("IngredientId")
                        .HasColumnName("IngredientID")
                        .HasColumnType("int");

                    b.Property<int>("IngredientTypeId")
                        .HasColumnName("IngredientTypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("IngredientTypeId");

                    b.ToTable("IngredientsIngredientTypes");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.InputProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InputId")
                        .HasColumnName("InputID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InputId");

                    b.HasIndex("ProductId");

                    b.ToTable("InputProducts");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Inputs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("InvoiceAmountWithPdv")
                        .HasColumnName("InvoiceAmountWithPDV")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal>("Pdv")
                        .HasColumnName("PDV")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int>("StorageId")
                        .HasColumnName("StorageID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StorageId");

                    b.HasIndex("UserId");

                    b.ToTable("Inputs");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Cancel")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.OutputProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("OutputId")
                        .HasColumnName("OutputID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OutputId");

                    b.HasIndex("ProductId");

                    b.ToTable("OutputProducts");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Outputs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("ReceiveNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<decimal>("ValueWithPdv")
                        .HasColumnName("ValueWithPDV")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ValueWithoutPdv")
                        .HasColumnName("ValueWithoutPDV")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Outputs");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.ProductIngredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientId")
                        .HasColumnName("IngredientID")
                        .HasColumnType("int");

                    b.Property<int>("Measure")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductIngredients");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.ProductTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ImageThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnName("ProductTypeID")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Reviews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Storages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Units", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.UserAddresses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.UserTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserAddressId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("CS_Email")
                        .HasFilter("([Email] IS NOT NULL)");

                    b.HasIndex("UserAddressId");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasName("CS_UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.UsersUserTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeId")
                        .HasColumnName("UserTypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("UsersUserTypes");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Wishlists", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Ingredients", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Units", "Unit")
                        .WithMany("Ingredients")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_Ingredients_Units")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.IngredientsIngredientTypes", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Ingredients", "Ingredient")
                        .WithMany("IngredientsIngredientTypes")
                        .HasForeignKey("IngredientId")
                        .HasConstraintName("FK_IngredientsIngredientTypes_Ingredients")
                        .IsRequired();

                    b.HasOne("eNatureBeauty.WebAPI.Database.IngredientTypes", "IngredientType")
                        .WithMany("IngredientsIngredientTypes")
                        .HasForeignKey("IngredientTypeId")
                        .HasConstraintName("FK_IngredientsIngredientTypes_IngredientTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.InputProducts", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Inputs", "Input")
                        .WithMany("InputProducts")
                        .HasForeignKey("InputId")
                        .HasConstraintName("FK_InputProducts_Inputs")
                        .IsRequired();

                    b.HasOne("eNatureBeauty.WebAPI.Database.Products", "Product")
                        .WithMany("InputProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_InputProducts_Products")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Inputs", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Storages", "Storage")
                        .WithMany("Inputs")
                        .HasForeignKey("StorageId")
                        .HasConstraintName("FK_Inputs_Storages")
                        .IsRequired();

                    b.HasOne("eNatureBeauty.WebAPI.Database.Users", "User")
                        .WithMany("Inputs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Inputs_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Orders", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Orders_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.OutputProducts", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Outputs", "Output")
                        .WithMany("OutputProducts")
                        .HasForeignKey("OutputId")
                        .HasConstraintName("FK_OutputProducts_Outputs")
                        .IsRequired();

                    b.HasOne("eNatureBeauty.WebAPI.Database.Products", "Product")
                        .WithMany("OutputProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_OutputProducts_Products")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Outputs", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Orders", "Order")
                        .WithMany("Outputs")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Outputs_Orders");

                    b.HasOne("eNatureBeauty.WebAPI.Database.Users", "User")
                        .WithMany("Outputs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Outputs_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.ProductIngredients", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Ingredients", "Ingredient")
                        .WithMany("ProductIngredients")
                        .HasForeignKey("IngredientId")
                        .HasConstraintName("FK_ProductIngredients_Ingredients")
                        .IsRequired();

                    b.HasOne("eNatureBeauty.WebAPI.Database.Products", "Product")
                        .WithMany("ProductIngredients")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductIngredients_Products")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Products", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.ProductTypes", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .HasConstraintName("FK_Products_ProductTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Reviews", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Products", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Reviews_Products")
                        .IsRequired();

                    b.HasOne("eNatureBeauty.WebAPI.Database.Users", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Reviews_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Users", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.UserAddresses", "UserAddress")
                        .WithMany("Users")
                        .HasForeignKey("UserAddressId")
                        .HasConstraintName("FK__Users__UserAddre__0E391C95");
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.UsersUserTypes", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Users", "User")
                        .WithMany("UsersUserTypes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UsersUserTypes_Users")
                        .IsRequired();

                    b.HasOne("eNatureBeauty.WebAPI.Database.UserTypes", "UserType")
                        .WithMany("UsersUserTypes")
                        .HasForeignKey("UserTypeId")
                        .HasConstraintName("FK_UsersUserTypes_UserTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("eNatureBeauty.WebAPI.Database.Wishlists", b =>
                {
                    b.HasOne("eNatureBeauty.WebAPI.Database.Products", "Product")
                        .WithMany("Wishlists")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Wishlists_Products")
                        .IsRequired();

                    b.HasOne("eNatureBeauty.WebAPI.Database.Users", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Wishlists_Users")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
